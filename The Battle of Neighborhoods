{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### The theme of this project is: Exploring what types of buildings need to be much vigilant around Toronto. \n",
    "The main way to research is: 1. find the outside crime data in Toronto 2. confirm the location where the crime happened 3. search what buildings are near by those location 4. sort building information, find which buildings have the highest crime rates around, then the result is we need strengthen vigilance around those buildings.\n",
    "\n",
    "##### The owner of those buildings which are found need to be much vigilant, and policeman, may be able to get profit from my research."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___________________________________________"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data introduction "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data used in this research is from kaggle, the link is: https://www.kaggle.com/kapastor/toronto-police-data-crime-rates-by-neighbourhood. This is Toronto Police Data, contains the criming data in Toronto in 2015, we can see some information about it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "shape:  (206435, 29)\n",
      "columns:  Index(['X', 'Y', 'Index_', 'event_unique_id', 'occurrencedate', 'reporteddate',\n",
      "       'premisetype', 'ucr_code', 'ucr_ext', 'offence', 'reportedyear',\n",
      "       'reportedmonth', 'reportedday', 'reporteddayofyear',\n",
      "       'reporteddayofweek', 'reportedhour', 'occurrenceyear',\n",
      "       'occurrencemonth', 'occurrenceday', 'occurrencedayofyear',\n",
      "       'occurrencedayofweek', 'occurrencehour', 'MCI', 'Division', 'Hood_ID',\n",
      "       'Neighbourhood', 'Long', 'Lat', 'ObjectId'],\n",
      "      dtype='object')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X</th>\n",
       "      <th>Y</th>\n",
       "      <th>Index_</th>\n",
       "      <th>event_unique_id</th>\n",
       "      <th>occurrencedate</th>\n",
       "      <th>reporteddate</th>\n",
       "      <th>premisetype</th>\n",
       "      <th>ucr_code</th>\n",
       "      <th>ucr_ext</th>\n",
       "      <th>offence</th>\n",
       "      <th>...</th>\n",
       "      <th>occurrencedayofyear</th>\n",
       "      <th>occurrencedayofweek</th>\n",
       "      <th>occurrencehour</th>\n",
       "      <th>MCI</th>\n",
       "      <th>Division</th>\n",
       "      <th>Hood_ID</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Long</th>\n",
       "      <th>Lat</th>\n",
       "      <th>ObjectId</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>-79.405228</td>\n",
       "      <td>43.656982</td>\n",
       "      <td>7801</td>\n",
       "      <td>GO-20152165447</td>\n",
       "      <td>2015-12-18T03:58:00.000Z</td>\n",
       "      <td>2015-12-18T03:59:00.000Z</td>\n",
       "      <td>Commercial</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>352.0</td>\n",
       "      <td>Friday</td>\n",
       "      <td>3</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D14</td>\n",
       "      <td>79</td>\n",
       "      <td>University (79)</td>\n",
       "      <td>-79.405228</td>\n",
       "      <td>43.656982</td>\n",
       "      <td>7001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>-79.307907</td>\n",
       "      <td>43.778732</td>\n",
       "      <td>7802</td>\n",
       "      <td>GO-20151417245</td>\n",
       "      <td>2015-08-15T21:45:00.000Z</td>\n",
       "      <td>2015-08-17T22:11:00.000Z</td>\n",
       "      <td>Commercial</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>227.0</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>21</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D42</td>\n",
       "      <td>118</td>\n",
       "      <td>Tam O'Shanter-Sullivan (118)</td>\n",
       "      <td>-79.307907</td>\n",
       "      <td>43.778732</td>\n",
       "      <td>7002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>-79.225029</td>\n",
       "      <td>43.765942</td>\n",
       "      <td>7803</td>\n",
       "      <td>GO-20151421107</td>\n",
       "      <td>2015-08-16T16:00:00.000Z</td>\n",
       "      <td>2015-08-18T14:40:00.000Z</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>2120</td>\n",
       "      <td>200</td>\n",
       "      <td>B&amp;E</td>\n",
       "      <td>...</td>\n",
       "      <td>228.0</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>16</td>\n",
       "      <td>Break and Enter</td>\n",
       "      <td>D43</td>\n",
       "      <td>137</td>\n",
       "      <td>Woburn (137)</td>\n",
       "      <td>-79.225029</td>\n",
       "      <td>43.765942</td>\n",
       "      <td>7003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>-79.140823</td>\n",
       "      <td>43.778648</td>\n",
       "      <td>7804</td>\n",
       "      <td>GO-20152167714</td>\n",
       "      <td>2015-11-26T13:00:00.000Z</td>\n",
       "      <td>2015-12-18T13:38:00.000Z</td>\n",
       "      <td>Other</td>\n",
       "      <td>2120</td>\n",
       "      <td>200</td>\n",
       "      <td>B&amp;E</td>\n",
       "      <td>...</td>\n",
       "      <td>330.0</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>13</td>\n",
       "      <td>Break and Enter</td>\n",
       "      <td>D43</td>\n",
       "      <td>133</td>\n",
       "      <td>Centennial Scarborough (133)</td>\n",
       "      <td>-79.140823</td>\n",
       "      <td>43.778648</td>\n",
       "      <td>7004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>-79.288361</td>\n",
       "      <td>43.691235</td>\n",
       "      <td>7805</td>\n",
       "      <td>GO-20152169954</td>\n",
       "      <td>2015-12-18T19:50:00.000Z</td>\n",
       "      <td>2015-12-18T19:55:00.000Z</td>\n",
       "      <td>Commercial</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>352.0</td>\n",
       "      <td>Friday</td>\n",
       "      <td>19</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D55</td>\n",
       "      <td>61</td>\n",
       "      <td>Taylor-Massey (61)</td>\n",
       "      <td>-79.288361</td>\n",
       "      <td>43.691235</td>\n",
       "      <td>7005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           X          Y  Index_ event_unique_id            occurrencedate  \\\n",
       "0 -79.405228  43.656982    7801  GO-20152165447  2015-12-18T03:58:00.000Z   \n",
       "1 -79.307907  43.778732    7802  GO-20151417245  2015-08-15T21:45:00.000Z   \n",
       "2 -79.225029  43.765942    7803  GO-20151421107  2015-08-16T16:00:00.000Z   \n",
       "3 -79.140823  43.778648    7804  GO-20152167714  2015-11-26T13:00:00.000Z   \n",
       "4 -79.288361  43.691235    7805  GO-20152169954  2015-12-18T19:50:00.000Z   \n",
       "\n",
       "               reporteddate premisetype  ucr_code  ucr_ext  offence  ...  \\\n",
       "0  2015-12-18T03:59:00.000Z  Commercial      1430      100  Assault  ...   \n",
       "1  2015-08-17T22:11:00.000Z  Commercial      1430      100  Assault  ...   \n",
       "2  2015-08-18T14:40:00.000Z   Apartment      2120      200      B&E  ...   \n",
       "3  2015-12-18T13:38:00.000Z       Other      2120      200      B&E  ...   \n",
       "4  2015-12-18T19:55:00.000Z  Commercial      1430      100  Assault  ...   \n",
       "\n",
       "   occurrencedayofyear occurrencedayofweek  occurrencehour              MCI  \\\n",
       "0                352.0          Friday                   3          Assault   \n",
       "1                227.0          Saturday                21          Assault   \n",
       "2                228.0          Sunday                  16  Break and Enter   \n",
       "3                330.0          Thursday                13  Break and Enter   \n",
       "4                352.0          Friday                  19          Assault   \n",
       "\n",
       "  Division  Hood_ID                 Neighbourhood       Long        Lat  \\\n",
       "0      D14       79               University (79) -79.405228  43.656982   \n",
       "1      D42      118  Tam O'Shanter-Sullivan (118) -79.307907  43.778732   \n",
       "2      D43      137                  Woburn (137) -79.225029  43.765942   \n",
       "3      D43      133  Centennial Scarborough (133) -79.140823  43.778648   \n",
       "4      D55       61            Taylor-Massey (61) -79.288361  43.691235   \n",
       "\n",
       "   ObjectId  \n",
       "0      7001  \n",
       "1      7002  \n",
       "2      7003  \n",
       "3      7004  \n",
       "4      7005  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('C:/Users/XinYuLi/Documents/data science coursera/MCI_2014_to_2019.csv/MCI_2014_to_2019.csv')\n",
    "print('shape: ',df.shape)\n",
    "print('columns: ', df.columns)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### I will only use Index_, Long, Lat, these 3 columns in the research, so I will only explain these columns:\n",
    " - Index_: we can think it as an id of criming case\n",
    " - Long and Lat: the location of place where crime happened\n",
    " \n",
    " I will use these location data to find the buildings near by them through foursquare.com."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "_____________"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Methodology"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import the library we need\n",
    "import pandas as pd\n",
    "import geopy\n",
    "from geopy.geocoders import Nominatim\n",
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "43.6534817 -79.3839347\n"
     ]
    }
   ],
   "source": [
    "# get the location information of Toronto through geopy package\n",
    "address = 'Toronto City'\n",
    "geolocator = Nominatim(user_agent='to_explorer')\n",
    "location = geolocator.geocode(address)\n",
    "print(location.latitude, location.longitude)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X</th>\n",
       "      <th>Y</th>\n",
       "      <th>Index_</th>\n",
       "      <th>event_unique_id</th>\n",
       "      <th>occurrencedate</th>\n",
       "      <th>reporteddate</th>\n",
       "      <th>premisetype</th>\n",
       "      <th>ucr_code</th>\n",
       "      <th>ucr_ext</th>\n",
       "      <th>offence</th>\n",
       "      <th>...</th>\n",
       "      <th>occurrencedayofyear</th>\n",
       "      <th>occurrencedayofweek</th>\n",
       "      <th>occurrencehour</th>\n",
       "      <th>MCI</th>\n",
       "      <th>Division</th>\n",
       "      <th>Hood_ID</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Long</th>\n",
       "      <th>Lat</th>\n",
       "      <th>ObjectId</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>-79.405228</td>\n",
       "      <td>43.656982</td>\n",
       "      <td>7801</td>\n",
       "      <td>GO-20152165447</td>\n",
       "      <td>2015-12-18T03:58:00.000Z</td>\n",
       "      <td>2015-12-18T03:59:00.000Z</td>\n",
       "      <td>Commercial</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>352.0</td>\n",
       "      <td>Friday</td>\n",
       "      <td>3</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D14</td>\n",
       "      <td>79</td>\n",
       "      <td>University (79)</td>\n",
       "      <td>-79.405228</td>\n",
       "      <td>43.656982</td>\n",
       "      <td>7001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>-79.307907</td>\n",
       "      <td>43.778732</td>\n",
       "      <td>7802</td>\n",
       "      <td>GO-20151417245</td>\n",
       "      <td>2015-08-15T21:45:00.000Z</td>\n",
       "      <td>2015-08-17T22:11:00.000Z</td>\n",
       "      <td>Commercial</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>227.0</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>21</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D42</td>\n",
       "      <td>118</td>\n",
       "      <td>Tam O'Shanter-Sullivan (118)</td>\n",
       "      <td>-79.307907</td>\n",
       "      <td>43.778732</td>\n",
       "      <td>7002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>-79.225029</td>\n",
       "      <td>43.765942</td>\n",
       "      <td>7803</td>\n",
       "      <td>GO-20151421107</td>\n",
       "      <td>2015-08-16T16:00:00.000Z</td>\n",
       "      <td>2015-08-18T14:40:00.000Z</td>\n",
       "      <td>Apartment</td>\n",
       "      <td>2120</td>\n",
       "      <td>200</td>\n",
       "      <td>B&amp;E</td>\n",
       "      <td>...</td>\n",
       "      <td>228.0</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>16</td>\n",
       "      <td>Break and Enter</td>\n",
       "      <td>D43</td>\n",
       "      <td>137</td>\n",
       "      <td>Woburn (137)</td>\n",
       "      <td>-79.225029</td>\n",
       "      <td>43.765942</td>\n",
       "      <td>7003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>-79.140823</td>\n",
       "      <td>43.778648</td>\n",
       "      <td>7804</td>\n",
       "      <td>GO-20152167714</td>\n",
       "      <td>2015-11-26T13:00:00.000Z</td>\n",
       "      <td>2015-12-18T13:38:00.000Z</td>\n",
       "      <td>Other</td>\n",
       "      <td>2120</td>\n",
       "      <td>200</td>\n",
       "      <td>B&amp;E</td>\n",
       "      <td>...</td>\n",
       "      <td>330.0</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>13</td>\n",
       "      <td>Break and Enter</td>\n",
       "      <td>D43</td>\n",
       "      <td>133</td>\n",
       "      <td>Centennial Scarborough (133)</td>\n",
       "      <td>-79.140823</td>\n",
       "      <td>43.778648</td>\n",
       "      <td>7004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>-79.288361</td>\n",
       "      <td>43.691235</td>\n",
       "      <td>7805</td>\n",
       "      <td>GO-20152169954</td>\n",
       "      <td>2015-12-18T19:50:00.000Z</td>\n",
       "      <td>2015-12-18T19:55:00.000Z</td>\n",
       "      <td>Commercial</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>352.0</td>\n",
       "      <td>Friday</td>\n",
       "      <td>19</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D55</td>\n",
       "      <td>61</td>\n",
       "      <td>Taylor-Massey (61)</td>\n",
       "      <td>-79.288361</td>\n",
       "      <td>43.691235</td>\n",
       "      <td>7005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           X          Y  Index_ event_unique_id            occurrencedate  \\\n",
       "0 -79.405228  43.656982    7801  GO-20152165447  2015-12-18T03:58:00.000Z   \n",
       "1 -79.307907  43.778732    7802  GO-20151417245  2015-08-15T21:45:00.000Z   \n",
       "2 -79.225029  43.765942    7803  GO-20151421107  2015-08-16T16:00:00.000Z   \n",
       "3 -79.140823  43.778648    7804  GO-20152167714  2015-11-26T13:00:00.000Z   \n",
       "4 -79.288361  43.691235    7805  GO-20152169954  2015-12-18T19:50:00.000Z   \n",
       "\n",
       "               reporteddate premisetype  ucr_code  ucr_ext  offence  ...  \\\n",
       "0  2015-12-18T03:59:00.000Z  Commercial      1430      100  Assault  ...   \n",
       "1  2015-08-17T22:11:00.000Z  Commercial      1430      100  Assault  ...   \n",
       "2  2015-08-18T14:40:00.000Z   Apartment      2120      200      B&E  ...   \n",
       "3  2015-12-18T13:38:00.000Z       Other      2120      200      B&E  ...   \n",
       "4  2015-12-18T19:55:00.000Z  Commercial      1430      100  Assault  ...   \n",
       "\n",
       "   occurrencedayofyear occurrencedayofweek  occurrencehour              MCI  \\\n",
       "0                352.0          Friday                   3          Assault   \n",
       "1                227.0          Saturday                21          Assault   \n",
       "2                228.0          Sunday                  16  Break and Enter   \n",
       "3                330.0          Thursday                13  Break and Enter   \n",
       "4                352.0          Friday                  19          Assault   \n",
       "\n",
       "  Division  Hood_ID                 Neighbourhood       Long        Lat  \\\n",
       "0      D14       79               University (79) -79.405228  43.656982   \n",
       "1      D42      118  Tam O'Shanter-Sullivan (118) -79.307907  43.778732   \n",
       "2      D43      137                  Woburn (137) -79.225029  43.765942   \n",
       "3      D43      133  Centennial Scarborough (133) -79.140823  43.778648   \n",
       "4      D55       61            Taylor-Massey (61) -79.288361  43.691235   \n",
       "\n",
       "   ObjectId  \n",
       "0      7001  \n",
       "1      7002  \n",
       "2      7003  \n",
       "3      7004  \n",
       "4      7005  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# load the crime data\n",
    "df = pd.read_csv('C:/Users/XinYuLi/Documents/data science coursera/MCI_2014_to_2019.csv/MCI_2014_to_2019.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(206435, 29)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "premisetype\n",
       "Apartment     49996\n",
       "Commercial    41081\n",
       "House         37927\n",
       "Other         23178\n",
       "Outside       54253\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# group data by premisetype\n",
    "df.groupby('premisetype').size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X</th>\n",
       "      <th>Y</th>\n",
       "      <th>Index_</th>\n",
       "      <th>event_unique_id</th>\n",
       "      <th>occurrencedate</th>\n",
       "      <th>reporteddate</th>\n",
       "      <th>premisetype</th>\n",
       "      <th>ucr_code</th>\n",
       "      <th>ucr_ext</th>\n",
       "      <th>offence</th>\n",
       "      <th>...</th>\n",
       "      <th>occurrencedayofyear</th>\n",
       "      <th>occurrencedayofweek</th>\n",
       "      <th>occurrencehour</th>\n",
       "      <th>MCI</th>\n",
       "      <th>Division</th>\n",
       "      <th>Hood_ID</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Long</th>\n",
       "      <th>Lat</th>\n",
       "      <th>ObjectId</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>7807</td>\n",
       "      <td>GO-20152143239</td>\n",
       "      <td>2015-12-14T21:00:00.000Z</td>\n",
       "      <td>2015-12-16T18:32:00.000Z</td>\n",
       "      <td>Outside</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>348.0</td>\n",
       "      <td>Monday</td>\n",
       "      <td>21</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D52</td>\n",
       "      <td>76</td>\n",
       "      <td>Bay Street Corridor (76)</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>7007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>7808</td>\n",
       "      <td>GO-20152143239</td>\n",
       "      <td>2015-12-14T21:00:00.000Z</td>\n",
       "      <td>2015-12-16T18:32:00.000Z</td>\n",
       "      <td>Outside</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>348.0</td>\n",
       "      <td>Monday</td>\n",
       "      <td>21</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D52</td>\n",
       "      <td>76</td>\n",
       "      <td>Bay Street Corridor (76)</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>7008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>7809</td>\n",
       "      <td>GO-20152143239</td>\n",
       "      <td>2015-12-14T21:00:00.000Z</td>\n",
       "      <td>2015-12-16T18:32:00.000Z</td>\n",
       "      <td>Outside</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>348.0</td>\n",
       "      <td>Monday</td>\n",
       "      <td>21</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D52</td>\n",
       "      <td>76</td>\n",
       "      <td>Bay Street Corridor (76)</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>7009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>-79.386780</td>\n",
       "      <td>43.663361</td>\n",
       "      <td>7810</td>\n",
       "      <td>GO-20151970205</td>\n",
       "      <td>2015-11-17T01:20:00.000Z</td>\n",
       "      <td>2015-11-17T02:43:00.000Z</td>\n",
       "      <td>Outside</td>\n",
       "      <td>1610</td>\n",
       "      <td>160</td>\n",
       "      <td>Robbery - Taxi</td>\n",
       "      <td>...</td>\n",
       "      <td>321.0</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>1</td>\n",
       "      <td>Robbery</td>\n",
       "      <td>D52</td>\n",
       "      <td>76</td>\n",
       "      <td>Bay Street Corridor (76)</td>\n",
       "      <td>-79.386780</td>\n",
       "      <td>43.663361</td>\n",
       "      <td>7010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>-79.359757</td>\n",
       "      <td>43.650761</td>\n",
       "      <td>7816</td>\n",
       "      <td>GO-20152122687</td>\n",
       "      <td>2015-12-11T13:15:00.000Z</td>\n",
       "      <td>2015-12-11T13:45:00.000Z</td>\n",
       "      <td>Outside</td>\n",
       "      <td>1430</td>\n",
       "      <td>100</td>\n",
       "      <td>Assault</td>\n",
       "      <td>...</td>\n",
       "      <td>345.0</td>\n",
       "      <td>Friday</td>\n",
       "      <td>13</td>\n",
       "      <td>Assault</td>\n",
       "      <td>D51</td>\n",
       "      <td>77</td>\n",
       "      <td>Waterfront Communities-The Island (77)</td>\n",
       "      <td>-79.359756</td>\n",
       "      <td>43.650761</td>\n",
       "      <td>7016</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            X          Y  Index_ event_unique_id            occurrencedate  \\\n",
       "6  -79.380806  43.649895    7807  GO-20152143239  2015-12-14T21:00:00.000Z   \n",
       "7  -79.380806  43.649895    7808  GO-20152143239  2015-12-14T21:00:00.000Z   \n",
       "8  -79.380806  43.649895    7809  GO-20152143239  2015-12-14T21:00:00.000Z   \n",
       "9  -79.386780  43.663361    7810  GO-20151970205  2015-11-17T01:20:00.000Z   \n",
       "15 -79.359757  43.650761    7816  GO-20152122687  2015-12-11T13:15:00.000Z   \n",
       "\n",
       "                reporteddate premisetype  ucr_code  ucr_ext         offence  \\\n",
       "6   2015-12-16T18:32:00.000Z     Outside      1430      100         Assault   \n",
       "7   2015-12-16T18:32:00.000Z     Outside      1430      100         Assault   \n",
       "8   2015-12-16T18:32:00.000Z     Outside      1430      100         Assault   \n",
       "9   2015-11-17T02:43:00.000Z     Outside      1610      160  Robbery - Taxi   \n",
       "15  2015-12-11T13:45:00.000Z     Outside      1430      100         Assault   \n",
       "\n",
       "    ...  occurrencedayofyear occurrencedayofweek  occurrencehour      MCI  \\\n",
       "6   ...                348.0          Monday                  21  Assault   \n",
       "7   ...                348.0          Monday                  21  Assault   \n",
       "8   ...                348.0          Monday                  21  Assault   \n",
       "9   ...                321.0          Tuesday                  1  Robbery   \n",
       "15  ...                345.0          Friday                  13  Assault   \n",
       "\n",
       "   Division  Hood_ID                           Neighbourhood       Long  \\\n",
       "6       D52       76                Bay Street Corridor (76) -79.380806   \n",
       "7       D52       76                Bay Street Corridor (76) -79.380806   \n",
       "8       D52       76                Bay Street Corridor (76) -79.380806   \n",
       "9       D52       76                Bay Street Corridor (76) -79.386780   \n",
       "15      D51       77  Waterfront Communities-The Island (77) -79.359756   \n",
       "\n",
       "          Lat  ObjectId  \n",
       "6   43.649895      7007  \n",
       "7   43.649895      7008  \n",
       "8   43.649895      7009  \n",
       "9   43.663361      7010  \n",
       "15  43.650761      7016  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# only save the data of which premisetype is outside, we will only use these data\n",
    "df = df[df['premisetype']=='Outside']\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(54253, 29)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index_</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>7807</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>7808</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>7809</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>7810</td>\n",
       "      <td>43.663361</td>\n",
       "      <td>-79.386780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>7816</td>\n",
       "      <td>43.650761</td>\n",
       "      <td>-79.359756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Index_        Lat       Long\n",
       "6     7807  43.649895 -79.380806\n",
       "7     7808  43.649895 -79.380806\n",
       "8     7809  43.649895 -79.380806\n",
       "9     7810  43.663361 -79.386780\n",
       "15    7816  43.650761 -79.359756"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# just select Index_, Lat, Long, these 3 columns, other columns won't be used\n",
    "df2 = df[['Index_', 'Lat', 'Long']]\n",
    "df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>7807</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>7808</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>7809</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>7810</td>\n",
       "      <td>43.663361</td>\n",
       "      <td>-79.386780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>7816</td>\n",
       "      <td>43.650761</td>\n",
       "      <td>-79.359756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     id   Latitude  Longitude\n",
       "0  7807  43.649895 -79.380806\n",
       "1  7808  43.649895 -79.380806\n",
       "2  7809  43.649895 -79.380806\n",
       "3  7810  43.663361 -79.386780\n",
       "4  7816  43.650761 -79.359756"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reset the columns and index of dataset\n",
    "df2.columns = ['id', 'Latitude', 'Longitude']\n",
    "df2.index = range(len(df2))\n",
    "df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(54253, 3)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100, 3)"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Because my foursquare account tier is Sandbox, can only make 950 Regular Calls/Day,\n",
    "# so I just use first 100 data in df2\n",
    "df3 = df2.loc[:99, :]\n",
    "df3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a function to get the nearby_venues information based on df3 through www.foursquare.com\n",
    "def getNearbyVenues(id, latitudes, longitudes, radius = 500):\n",
    "    \n",
    "    venues_list = []\n",
    "    for index, lat, lng in zip(id, latitudes, longitudes):\n",
    "        print(index)\n",
    "    \n",
    "        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n",
    "            CLIENT_ID, \n",
    "            CLIENT_SECRET, \n",
    "            VERSION, \n",
    "            lat, \n",
    "            lng, \n",
    "            radius, \n",
    "            LIMIT)\n",
    "        results = requests.get(url).json()['response']['groups'][0]['items']\n",
    "    \n",
    "        venues_list.append([(\n",
    "            index, \n",
    "            lat, \n",
    "            lng, \n",
    "            v['venue']['name'],  \n",
    "            v['venue']['categories'][0]['name']) for v in results])\n",
    "    \n",
    "        nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n",
    "        nearby_venues.columns = ['CrimeLocation', \n",
    "                  'CrimeLocation Latitude', \n",
    "                  'CrimeLocation Longitude', \n",
    "                  'Venue', \n",
    "                  'Venue Category']\n",
    "    return(nearby_venues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "CLIENT_ID = 'VX4PYPCKOTDBDX4F1DS3AKOSJHDCBRJVCSNPM2OEEB2LVNOD' # my Foursquare ID\n",
    "CLIENT_SECRET = 'IRCPXTFRSYAJKVQV1EXCFOM2DUZFALSCIORF4J1Q0XCDDMED' # my Foursquare Secret\n",
    "VERSION = '20180605' # Foursquare API version\n",
    "LIMIT = 100\n",
    "radius = 500"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7807\n",
      "7808\n",
      "7809\n",
      "7810\n",
      "7816\n",
      "7817\n",
      "7818\n",
      "7840\n",
      "7851\n",
      "7860\n",
      "7864\n",
      "7866\n",
      "7868\n",
      "7870\n",
      "7301\n",
      "7304\n",
      "7310\n",
      "7322\n",
      "7329\n",
      "7332\n",
      "7335\n",
      "7336\n",
      "7341\n",
      "7346\n",
      "7350\n",
      "7351\n",
      "7355\n",
      "7356\n",
      "7360\n",
      "7365\n",
      "7374\n",
      "7375\n",
      "7386\n",
      "7389\n",
      "7393\n",
      "7397\n",
      "7903\n",
      "7908\n",
      "7912\n",
      "7914\n",
      "7201\n",
      "7004\n",
      "7010\n",
      "7012\n",
      "7022\n",
      "7024\n",
      "7025\n",
      "7037\n",
      "7048\n",
      "7054\n",
      "7056\n",
      "7063\n",
      "7064\n",
      "7072\n",
      "7074\n",
      "7078\n",
      "7079\n",
      "7098\n",
      "7602\n",
      "7202\n",
      "7203\n",
      "7506\n",
      "7710\n",
      "7716\n",
      "7721\n",
      "7725\n",
      "7728\n",
      "7732\n",
      "7734\n",
      "7735\n",
      "7736\n",
      "7747\n",
      "7749\n",
      "7752\n",
      "7755\n",
      "7756\n",
      "7757\n",
      "7761\n",
      "7766\n",
      "7771\n",
      "7779\n",
      "7780\n",
      "7781\n",
      "7782\n",
      "7783\n",
      "7786\n",
      "7790\n",
      "7793\n",
      "7797\n",
      "7919\n",
      "7507\n",
      "7406\n",
      "7508\n",
      "7607\n",
      "7108\n",
      "7407\n",
      "7109\n",
      "7425\n",
      "7426\n",
      "7435\n"
     ]
    }
   ],
   "source": [
    "# get the nearby_venues dataframe to Toronto_venues\n",
    "Toronto_venues = getNearbyVenues(id=df3['id'],\n",
    "                                   latitudes=df3['Latitude'],\n",
    "                                   longitudes=df3['Longitude']\n",
    "                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CrimeLocation</th>\n",
       "      <th>CrimeLocation Latitude</th>\n",
       "      <th>CrimeLocation Longitude</th>\n",
       "      <th>Venue</th>\n",
       "      <th>Venue Category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>7807</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>Dineen Coffee</td>\n",
       "      <td>CafÃ©</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>7807</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>Equinox Bay Street</td>\n",
       "      <td>Gym</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>7807</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>Richmond Station</td>\n",
       "      <td>American Restaurant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>7807</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>Pilot Coffee Roasters</td>\n",
       "      <td>Coffee Shop</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>7807</td>\n",
       "      <td>43.649895</td>\n",
       "      <td>-79.380806</td>\n",
       "      <td>Cactus Club Cafe</td>\n",
       "      <td>American Restaurant</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CrimeLocation  CrimeLocation Latitude  CrimeLocation Longitude  \\\n",
       "0           7807               43.649895               -79.380806   \n",
       "1           7807               43.649895               -79.380806   \n",
       "2           7807               43.649895               -79.380806   \n",
       "3           7807               43.649895               -79.380806   \n",
       "4           7807               43.649895               -79.380806   \n",
       "\n",
       "                   Venue       Venue Category  \n",
       "0          Dineen Coffee                 CafÃ©  \n",
       "1     Equinox Bay Street                  Gym  \n",
       "2       Richmond Station  American Restaurant  \n",
       "3  Pilot Coffee Roasters          Coffee Shop  \n",
       "4       Cactus Club Cafe  American Restaurant  "
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Toronto_venues.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [],
   "source": [
    "# group the data by Venue Category\n",
    "grouped_cate = Toronto_venues.groupby('Venue Category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Number</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Venue Category</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Accessories Store</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Afghan Restaurant</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>African Restaurant</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Antique Shop</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Wine Bar</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Wine Shop</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Wings Joint</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Women's Store</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Yoga Studio</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>283 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Number\n",
       "Venue Category             \n",
       "Accessories Store         3\n",
       "Afghan Restaurant         1\n",
       "African Restaurant        1\n",
       "American Restaurant      42\n",
       "Antique Shop              3\n",
       "...                     ...\n",
       "Wine Bar                 10\n",
       "Wine Shop                 4\n",
       "Wings Joint               8\n",
       "Women's Store            11\n",
       "Yoga Studio              24\n",
       "\n",
       "[283 rows x 1 columns]"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# find the number of every category appears, and send them to a new dataframe\n",
    "cate = pd.DataFrame(grouped_cate.size())\n",
    "cate.columns=['Number']\n",
    "cate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Number</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Venue Category</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Coffee Shop</td>\n",
       "      <td>281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>CafÃ©</td>\n",
       "      <td>132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Restaurant</td>\n",
       "      <td>116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Italian Restaurant</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Pizza Place</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Bakery</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Sandwich Place</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Hotel</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Clothing Store</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Japanese Restaurant</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Gym</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Fast Food Restaurant</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Bar</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Park</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Sushi Restaurant</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Pub</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Thai Restaurant</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>American Restaurant</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Gastropub</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Number\n",
       "Venue Category              \n",
       "Coffee Shop              281\n",
       "CafÃ©                     132\n",
       "Restaurant               116\n",
       "Italian Restaurant        89\n",
       "Pizza Place               75\n",
       "Bakery                    72\n",
       "Sandwich Place            71\n",
       "Hotel                     61\n",
       "Clothing Store            58\n",
       "Japanese Restaurant       55\n",
       "Gym                       54\n",
       "Fast Food Restaurant      51\n",
       "Bar                       50\n",
       "Grocery Store             49\n",
       "Park                      49\n",
       "Sushi Restaurant          49\n",
       "Pub                       45\n",
       "Thai Restaurant           42\n",
       "American Restaurant       42\n",
       "Gastropub                 41"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# sort the dataset, ascending = False\n",
    "cate.sort_values(by=['Number'], ascending=False).head(20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "_________"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see at the end of Methodology, the buildings categories need to be much vigilant in Toronto are:\n",
    "- Restaurant\n",
    "- Coffee Shop\n",
    "- Hotel\n",
    "- Clothing Store\n",
    "- Gym\n",
    "- Park\n",
    "\n",
    ".etc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___________"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Discussion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the researching data and results, we found that outside crime always happen at the place where has too many or too less people. Especially around restaurant and other place where people enjoy food and drink, outside crime always happened, people at these place are always relax and unguarded is one of reasons."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___________"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Toronto needs to strengthen vigilance around Restaurant, Coffee Shop, Hotel, Clothing Store, Gym, Park and other place where always have too many or too less people."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
